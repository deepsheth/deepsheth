{"version":3,"sources":["webpack:///./src/components/Slide.js","webpack:///./src/pages/index.js"],"names":["StyledSlide","styled","section","withConfig","displayName","componentId","props","isBorderless","mediaq","xs_sm","_templateObject","breakp","xs","sm","_templateObject2","sm_md","_templateObject3","md","_templateObject4","lg","_templateObject5","xl","_templateObject6","_templateObject7","_templateObject8","_templateObject9","Overlay","div","isColorful","rgba","overlay","_templateObject10","Content","_templateObject11","_templateObject12","_templateObject13","Body","Title","h1","Math","pow","theme","typeScale","_templateObject14","_templateObject15","_templateObject16","_templateObject17","xxl","_templateObject18","huge","_templateObject19","_templateObject20","isExpanded","_templateObject21","_templateObject22","_templateObject23","_templateObject24","_templateObject25","_templateObject26","Description","_templateObject27","_templateObject28","_templateObject29","_templateObject30","_templateObject31","_templateObject32","_templateObject33","_templateObject34","_templateObject35","_templateObject36","_templateObject37","highlight","_templateObject38","_templateObject39","StyledButton","a","_templateObject40","_templateObject41","_templateObject42","_templateObject43","_templateObject44","_templateObject45","_templateObject46","_templateObject47","Button","_ref","text","link","isExternal","react_default","createElement","as","href","Link","to","Slide","hasBtn","button","id","_StyledImg","fluid","alt","_css","position","title","descr","propTypes","PropTypes","string","isRequired","bool","defaultProps","element","object","shape","introHighlight","animScroll","keyframes","SlidesSection","fonts","heading","pages_templateObject","pages_templateObject2","pages_templateObject3","pages_templateObject4","pages_templateObject5","pages_templateObject6","pages_templateObject7","pages_templateObject8","pages_templateObject9","pages_templateObject10","pages_templateObject11","pages_templateObject12","pages_templateObject13","IndexPage","data","slides","push","Fragment","gatsby_browser_entry","imgIntro","childImageSharp","renderSlides","map","slideProps","components_Slide","Object","assign","key","Layout","hasTransparentHeader","hasStickyHeader","hasContainer","hasFooter","Seo","keywords","slideImage","pageQuery"],"mappings":"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","file":"component---src-pages-index-js-14151e4d499db4543b50.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { rgba } from 'polished';\r\nimport { Link } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\nimport theme, { mediaq, breakp } from '../utils/theme';\r\n\r\n/* ==================================================\r\n *  Styles\r\n================================================== */\r\n/* To convert the props.overlay color from HEX to RGBA,\r\n * we use the rgba() function from polished.js\r\n * In order to call it within a sytled component, we do\r\n * background: ${props => rgba(props.overlay, 0.8)};\r\n * Which sets the background color to 80% opacity of the overlay color\r\n */\r\nconst StyledSlide = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  position: relative;\r\n  border: ${props => (props.isBorderless ? 'none' : '16px solid white')};\r\n  margin-bottom: ${props => (props.isBorderless ? '0' : '-16px')};\r\n  ${mediaq.xs_sm`min-height: ${breakp.xs}px;`}\r\n  ${mediaq.sm`min-height: ${breakp.sm}px;`}\r\n  ${mediaq.sm_md`min-height: ${breakp.sm}px;`}\r\n\r\n  ${mediaq.md`border-width: ${props => (props.isBorderless ? null : '24px')};`}\r\n  ${mediaq.lg`border-width: ${props => (props.isBorderless ? null : '32px')};`}\r\n  ${mediaq.xl`border-width: ${props => (props.isBorderless ? null : '40px')};`}\r\n\r\n  ${mediaq.md`margin-bottom: ${props => (props.isBorderless ? '0' : '-24px')};`}\r\n  ${mediaq.lg`margin-bottom: ${props => (props.isBorderless ? '0' : '-32px')};`}\r\n  ${mediaq.xl`margin-bottom: ${props => (props.isBorderless ? '0' : '-40px')};`}\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: -1;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${props =>\r\n    props.isColorful\r\n      ? `linear-gradient(185deg, ${rgba(props.overlay, 0.4)} 0%, ${rgba(\r\n          props.overlay,\r\n          0.8\r\n        )} 50%, ${rgba(props.overlay, 0.9)} 100%)`\r\n      : `linear-gradient(185deg, ${rgba(props.overlay, 0.0)} 0%, ${rgba(\r\n          props.overlay,\r\n          0.6\r\n        )} 50%, ${rgba(props.overlay, 0.9)} 100%)`};\r\n  ${mediaq.lg`background: ${props =>\r\n    props.isColorful\r\n      ? `linear-gradient(190deg, ${rgba(props.overlay, 0.3)} 0%, ${rgba(\r\n          props.overlay,\r\n          0.6\r\n        )} 50%, ${rgba(props.overlay, 0.9)} 100%)`\r\n      : `linear-gradient(190deg, ${rgba(props.overlay, 0.0)} 0%, ${rgba(\r\n          props.overlay,\r\n          0.4\r\n        )} 50%, ${rgba(props.overlay, 0.6)} 100%)`};\r\n  `}\r\n`;\r\n\r\nconst Content = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  /* Test with height: 75% for clipping. */\r\n  height: 100%;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  color: white;\r\n  padding: ${props => (props.isBorderless ? '32px' : '16px')};\r\n  ${mediaq.md`padding: ${props => (props.isBorderless ? '48px' : '24px')};`}\r\n  ${mediaq.lg`padding: ${props => (props.isBorderless ? '64px' : '32px')};`}\r\n  ${mediaq.xl`padding: ${props => (props.isBorderless ? '80px' : '40px')};`}\r\n`;\r\n\r\nconst Body = styled.div``;\r\n\r\nconst Title = styled.h1`\r\n  font-weight: normal;\r\n  font-size: ${theme.typeScale ** 3}em;\r\n  ${mediaq.xs`font-size: ${theme.typeScale ** 2}em;`}\r\n  ${mediaq.sm`font-size: ${theme.typeScale ** 3}em;`}\r\n  ${mediaq.lg`font-size: ${theme.typeScale ** 4}em;`}\r\n  ${mediaq.xl`font-size: ${theme.typeScale ** 6}em;`}\r\n  ${mediaq.xxl`font-size: ${theme.typeScale ** 7}em;`}\r\n  ${mediaq.huge`font-size: ${theme.typeScale ** 8}em;`}\r\n  width: 100%;\r\n  ${mediaq.xs`width: ${props => (props.isExpanded ? '100%' : '75%')};`}\r\n  ${mediaq.sm`width: ${props => (props.isExpanded ? '90%' : '66.667%')};`}\r\n  ${mediaq.sm`width: ${props => (props.isExpanded ? '90%' : '75%')};`}\r\n  ${mediaq.lg`width: ${props => (props.isExpanded ? '100%' : '66.667%')};`}\r\n  ${mediaq.xl`width: ${props => (props.isExpanded ? '100%' : '66.667%')};`}\r\n  ${mediaq.xxl`width: ${props => (props.isExpanded ? '90%' : '66.667%')};`}\r\n  ${mediaq.huge`width: ${props => (props.isExpanded ? '90%' : '66.667%')};`}\r\n`;\r\n\r\nconst Description = styled.div`\r\n  line-height: 1.4;\r\n  ${mediaq.xl`line-height: 1.5;`}  \r\n  font-size: 1.6rem;\r\n  ${mediaq.xs`font-size: 1.8rem;`}     \r\n  ${mediaq.sm`font-size: 2.0rem;`}     \r\n  ${mediaq.md`font-size: 2.0rem;`}     \r\n  ${mediaq.lg`font-size: 2.2rem;`}  \r\n  ${mediaq.xl`font-size: 2.4rem;`}  \r\n  width: 100%;\r\n  ${mediaq.sm`width: 85%;`}\r\n  ${mediaq.md`width: ${props => (props.isExpanded ? '90%' : '75%')};`}\r\n  ${mediaq.lg`width: 66.667%;`}\r\n  ${mediaq.xl`width: 50%;`}\r\n\r\n  a {\r\n    text-decoration: none;\r\n    border-bottom: 1px solid rgba(255,255,255,0.5);\r\n    ${mediaq.md`border-width: 2px;`}  \r\n    transition: background-color 150ms ease;\r\n  }\r\n  a:hover {\r\n    background: ${props => rgba(props.highlight, 0.5)};\r\n    ${mediaq.lg`background: ${props => rgba(props.highlight, 0.3)};`} \r\n  }\r\n  em {\r\n    font-style: normal;\r\n    background: ${props => rgba(props.highlight, 0.5)};\r\n    ${mediaq.lg`background: ${props => rgba(props.highlight, 0.3)};`} \r\n  }\r\n`;\r\n\r\nconst StyledButton = styled.a`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: white;\r\n  color: #333333;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.2ch;\r\n  padding: 8px 16px;\r\n  min-height: 48px;\r\n  ${mediaq.lg`height: 56px;`}\r\n  ${mediaq.xl`height: 64px;`}\r\n  width: 100%;\r\n  ${mediaq.xs`width: 66.66%;`}\r\n  ${mediaq.sm`width: 50%;`}\r\n  ${mediaq.lg`width: 33.333%;`}\r\n  ${mediaq.xxl`width: 25%;`}\r\n  margin: 0 auto;\r\n  ${mediaq.xs`margin-left: 0;`}\r\n  font-size: 1.4rem;\r\n  ${mediaq.lg`font-size: 1.6rem;`}\r\n`;\r\n\r\n/* ==================================================\r\n *  Helpers\r\n================================================== */\r\n/**\r\n * Creates a button with some text and a link location.\r\n * The props should have text, link, and isExternal\r\n * Syntax: https://www.styled-components.com/docs/basics#extending-styles\r\n */\r\nfunction Button({ text, link, isExternal }) {\r\n  if (isExternal) {\r\n    return (\r\n      <StyledButton as=\"a\" href={link}>\r\n        {text}\r\n      </StyledButton>\r\n    );\r\n  }\r\n  return (\r\n    <StyledButton as={Link} to={link}>\r\n      {text}\r\n    </StyledButton>\r\n  );\r\n}\r\n\r\n/* ==================================================\r\n *  Render\r\n================================================== */\r\n/**\r\n * Creates a Slide which is a fullscreen section (height: 100vh; width: 100%)\r\n * with a background image, title, and body text.\r\n */\r\nfunction Slide(props) {\r\n  const btn = props.button;\r\n  const hasBtn = typeof btn === 'undefined' ? false : true;\r\n  return (\r\n    <StyledSlide id={props.id} isBorderless={props.isBorderless}>\r\n      <Img\r\n        fluid={props.fluid}\r\n        alt=\"\"\r\n        // This CSS allows the image to be full screen.\r\n        // https://github.com/gatsbyjs/gatsby/issues/2470#issuecomment-338394370\r\n        css={`\r\n          position: absolute;\r\n          top: 0;\r\n          left: 0;\r\n          width: 100%;\r\n          height: 100%;\r\n          z-index: -1;\r\n\r\n          // Reposition the underlying images based on props (Optional)\r\n          img {\r\n            object-fit: cover !important;\r\n            object-position: ${props.position} !important;\r\n          }\r\n        `}\r\n      />\r\n      <Overlay overlay={props.overlay} isColorful={props.isColorful} />\r\n      <Content isExpanded={props.isExpanded} isBorderless={props.isBorderless} hasBtn={hasBtn}>\r\n        <Body>\r\n          <Title isExpanded={props.isExpanded}>{props.title}</Title>\r\n          <Description isExpanded={props.isExpanded} highlight={props.highlight}>\r\n            {props.descr}\r\n          </Description>\r\n        </Body>\r\n\r\n        {/* If this Slide has a button property, render a button */\r\n        /* Pass down the button prop from Slide to Button.\r\n         * Also pass down the className prop so that we can style the component */}\r\n        {hasBtn && <Button {...props.button} />}\r\n      </Content>\r\n    </StyledSlide>\r\n  );\r\n}\r\n\r\n/* ==================================================\r\n *  Properties\r\n================================================== */\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  link: PropTypes.string.isRequired,\r\n  isExternal: PropTypes.bool.isRequired,\r\n};\r\n\r\nButton.defaultProps = {\r\n  text: '',\r\n  link: '',\r\n  isExternal: false,\r\n};\r\n\r\nSlide.propTypes = {\r\n  // The ID used in the HTML prop for linking\r\n  id: PropTypes.string.isRequired,\r\n  // The title text\r\n  title: PropTypes.string,\r\n  // The description wrapped in a React/HTML element, preferably <p>\r\n  descr: PropTypes.element,\r\n  // The fluid image data for gatsby-image\r\n  fluid: PropTypes.object,\r\n  // The Overlay color in #000fff format\r\n  overlay: PropTypes.string,\r\n  // The Highlight color used for links and <em>\r\n  highlight: PropTypes.string,\r\n  // If the Overlay color should be colorful and strong\r\n  isColorful: PropTypes.bool,\r\n  // Expands the slide content area to fit more text\r\n  isExpanded: PropTypes.bool,\r\n  // The position of the image in CSS object-position format\r\n  position: PropTypes.string,\r\n  // A Button with text, link location, and indicator if the link is external\r\n  button: PropTypes.shape(Button.propTypes),\r\n  // Displays a slide without a border\r\n  isBorderless: PropTypes.bool,\r\n};\r\n\r\nSlide.defaultProps = {\r\n  overlay: '#000000',\r\n  highlight: '#000000',\r\n  isColorful: false,\r\n  isExpanded: false,\r\n  position: '50% 50%',\r\n  isBorderless: false,\r\n};\r\n\r\n/* ==================================================\r\n *  Queries\r\n================================================== */\r\n\r\nexport default Slide;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'gatsby';\r\nimport { graphql } from 'gatsby';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport theme, { mediaq } from '../utils/theme';\r\nimport Layout from '../components/Layout';\r\nimport Slide from '../components/Slide';\r\nimport SEO from '../components/Seo';\r\n\r\n/* ==================================================\r\n *  Styles\r\n================================================== */\r\n// const introHighlight = '#1a66ff';\r\nconst introHighlight = '#3445B8';\r\n\r\nconst animScroll = keyframes`\r\n  0% {\r\n    opacity: 1;\r\n    transform: translate(100%, 0px) rotate(-90deg);\r\n  }\r\n  100% {\r\n    opacity: 0.6;\r\n    transform: translate(100%, 40px) rotate(-90deg);\r\n  }\r\n`;\r\n\r\n// Used to override slide styles\r\nconst SlidesSection = styled.section`\r\n  #intro {\r\n    overflow: hidden;\r\n    ::after {\r\n      content: '<< SCROLL';\r\n      font-family: ${theme.fonts.heading};\r\n      letter-spacing: 0.5ch;\r\n\r\n      position: absolute;\r\n      bottom: 0;\r\n      right: 0;\r\n      transform: translateX(100%) rotate(-90deg);\r\n      transform-origin: bottom left;\r\n\r\n      color: ${introHighlight};\r\n      font-size: 1.3rem;\r\n      padding: 0 0 4px 48px;\r\n      border-bottom: 4px solid ${introHighlight};\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      ${mediaq.sm`color: white;`}\r\n      ${mediaq.sm`border-width: 8px;`}\r\n\r\n      ${mediaq.md`background: ${introHighlight};`}\r\n      ${mediaq.md`padding: 0 24px 0 48px;`}\r\n      ${mediaq.md`border: none;`}\r\n      ${mediaq.md`height: 24px;`}\r\n      ${mediaq.md`right: 24px;`}\r\n\r\n      ${mediaq.lg`font-size: 1.4rem;`}\r\n      ${mediaq.lg`height: 32px;`}\r\n      ${mediaq.lg`right: 32px;`}\r\n\r\n      ${mediaq.xl`font-size: 1.6rem;`}\r\n      ${mediaq.xl`height: 40px;`}\r\n      ${mediaq.xl`right: 40px;`}\r\n\r\n      animation: ${animScroll} 2s ease-in alternate infinite;\r\n    }\r\n  }\r\n`;\r\n\r\n/* ==================================================\r\n *  Render\r\n================================================== */\r\nfunction IndexPage({ data }) {\r\n  /* --------------------------------------------------\r\n   *  Slide Data\r\n  -------------------------------------------------- */\r\n  // slides contains the props data needed to create <Slide> elements.\r\n  // For each slide that we want to render, we create an object and push it to slides.\r\n  const slides = [];\r\n\r\n  /* --------------------------------------------------\r\n   *  Slide Data / #intro\r\n  -------------------------------------------------- */\r\n  slides.push({\r\n    id: 'intro',\r\n    title: 'I’m a software engineer building blockchain innovations for the fintech industry.',\r\n    descr: (\r\n      <>\r\n        <p>\r\n          Currently, I'm a software engineer at Fidelity Investments. I recently graduated from{' '}\r\n          <Link to=\"lehigh\">Lehigh University's</Link> Computer Science and Business program.\r\n          Previously, I did Cyber Risk Adivosry at <Link to=\"deloitte\">Deloitte</Link>.\r\n        </p>\r\n      </>\r\n    ),\r\n    fluid: data.imgIntro.childImageSharp.fluid,\r\n    overlay: '#030A1A',\r\n    highlight: introHighlight,\r\n    isColorful: false,\r\n    isExpanded: false,\r\n    position: '70% 20%',\r\n    // button: { text: 'Scroll', link: '#crater', isExternal: false },\r\n    isBorderless: true,\r\n  });\r\n\r\n  /* --------------------------------------------------\r\n   *  Slide Data / Render\r\n  -------------------------------------------------- */\r\n  // Why map is used: https://reactjs.org/docs/lists-and-keys.html\r\n  // Why a 'key' prop is needed: https://reactjs.org/docs/lists-and-keys.html#keys\r\n  const renderSlides = slides.map(slideProps => <Slide key={slideProps.id} {...slideProps} />);\r\n\r\n  /* --------------------------------------------------\r\n  *  Render Component\r\n  -------------------------------------------------- */\r\n  return (\r\n    <Layout hasTransparentHeader hasStickyHeader hasContainer={false} hasFooter={false}>\r\n      <SEO title=\"Home\" keywords={['arpit', 'sheth', 'shetharp', 'cornell', 'tech']} />\r\n      <SlidesSection>{renderSlides}</SlidesSection>\r\n    </Layout>\r\n  );\r\n}\r\nexport default IndexPage;\r\n\r\n/* ==================================================\r\n *  Properties\r\n================================================== */\r\nIndexPage.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n\r\n/* ==================================================\r\n *  Queries\r\n================================================== */\r\n\r\n// GraphQL fragment to load fluid responsive images\r\nexport const slideImage = graphql`\r\n  fragment slideImage on File {\r\n    childImageSharp {\r\n      fluid(maxWidth: 4000, quality: 90) {\r\n        ...GatsbyImageSharpFluid\r\n      }\r\n    }\r\n  }\r\n`;\r\n// GraphQL query to load the images based on the fragment\r\n// See https://codebushi.com/using-gatsby-image/ for more info\r\nexport const pageQuery = graphql`\r\n  query {\r\n    imgIntro: file(relativePath: { eq: \"slides/intro-deep-sheth.jpg\" }) {\r\n      ...slideImage\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}